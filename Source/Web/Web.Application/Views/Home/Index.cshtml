@inject Web.Application.Services.TimedHostedService timedHostService
@{
    bool timedServiceRunning = timedHostService.ServiceRunning;
}

<div class="container-fluid">
    <div class="row align-items-center justify-content-center">
        <div class="col-12 text-center">
        
            <h1 class="display-1">W E L C O M E</h1>

            <div class="d-flex justify-content-center m-3 p-3">
                <a type="button" class="btn btn-sm btn-warning opacity-75 mx-1" href="~/Home/NotFoundException">Not Found Button</a>
                <a type="button" class="btn btn-sm btn-warning opacity-75 mx-1" href="~/Home/InvalidModelStateException">Invalid Model State Button</a>
                <a type="button" class="btn btn-sm btn-warning opacity-75 mx-1" href="~/Home/BadRequestException">Bad Request Button</a>
                <a type="button" class="btn btn-sm btn-danger opacity-75 mx-1" href="~/Home/UnauthorizedAccessException">Unauthorized Access Button</a>
                <a type="button" class="btn btn-sm btn-danger opacity-75 mx-1" href="~/Home/SystemException">System Exception Button</a>
            </div>

            <div class="d-flex justify-content-center m-3 p-3">
                @if (timedServiceRunning)
                {
                    <a type="button" class="btn btn-sm btn-danger opacity-75 mx-1" href="~/Home/StopHostedService">Stop Hosted Service Button</a>
                }
                else
                {
                    <a type="button" class="btn btn-sm btn-success opacity-75 mx-1" href="~/Home/StartHostedService">Start Hosted Service Button</a>
                }
            </div>

        </div>
    </div>  
</div>

<input type="hidden" id="timedHostServiceRunning" name="timedHostServiceRunning" value="@timedServiceRunning.ToString()" />

@section styles
{
}

@section scripts
{
    <script>

        $(document).ready(function () {

            if ($('#timedHostServiceRunning').val().toLowerCase() === 'true') {
                showSuccessToast({ 'Message': 'Timed Host Service is running.', 'Delay': '10000' });
            } else {
                showInformationToast({ 'Message': 'Timed Host Service is stopped.', 'Delay': '10000' });
            }

            ajaxGet('Home/NotFoundException')
                .then(function (data) {
                })
                .catch((error) => {
                });

            ajaxGet('Home/BadRequestException')
                .then(function (data) {
                })
                .catch((error) => {
                });

            ajaxGet('Home/InvalidModelStateException')
                .then(function (data) {
                })
                .catch((error) => {
                });

            ajaxGet('Home/UnauthorizedAccessException')
                .then(function (data) {
                })
                .catch((error) => {
                });

            ajaxGet('Home/SystemException')
                .then(function (data) {
                })
                .catch((error) => {
                });

        });

    </script>
}
